---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: flannel2
  namespace: kube-system
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes/status
    verbs:
      - patch
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: flannel2
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: flannel2
subjects:
- kind: ServiceAccount
  name: flannel2
  namespace: kube-system
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: flannel2
  namespace: kube-system
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: kube-flannel2-cfg
  namespace: kube-system
  labels:
    tier: node
    app: flannel2
data:
  flannel2-conf.json: |
    {
      "type": "flannel",
      "name": "flannel-2",
      "subnetFile": "/run/flannel/flannel2.env",
      "dataDir": "/var/lib/cni/flannel2",
      "delegate": {
        "bridge": "kbr1"
      }
    }
  net-conf.json: |
    {
      "Network": "10.144.0.0/16",
      "SubnetLen": 24,
      "SubnetMin": "10.144.0.0",
      "Backend": {
        "Type": "vxlan"
      }
    }
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: kube-flannel2-ds
  namespace: kube-system
  labels:
    tier: node
    app: flannel2
spec:
  template:
    metadata:
      labels:
        tier: node
        app: flannel2
    spec:
      hostNetwork: true
      nodeSelector:
        beta.kubernetes.io/arch: amd64
      tolerations:
      - key: node-role.kubernetes.io/controlplane
        operator: Exists
        effect: NoSchedule
      - key: node-role.kubernetes.io/etcd
        operator: Exists
        effect: NoExecute
      serviceAccountName: flannel2
      # initContainers:
        #- name: install-cni
        #- image: quay.io/coreos/flannel:v0.10.0-amd64
        #- command:
        #- - cp
        #- args:
        #- - -f
        #- - /etc/kube-flannel/flannel2-conf.json
        #- - /etc/cni/multus/net.d/10-flannel.conf
        #- volumeMounts:
        #- - name: cni
        #-   mountPath: /etc/cni/multus/net.d
        #- - name: flannel2-cfg
        #-   mountPath: /etc/kube-flannel/
      containers:
      - name: kube-flannel2
        image: quay.io/coreos/flannel:v0.10.0-amd64
        command:
        - /opt/bin/flanneld
        args:
        - --ip-masq
        - -iface=ens4
        - -etcd-endpoints=https://10.0.3.2:2379 
        - -etcd-keyfile=/etc/ssl/etcd/ssl/node-k8s-master1-key.pem
        - -etcd-certfile=/etc/ssl/etcd/ssl/node-k8s-master1.pem 
        - -etcd-cafile=/etc/ssl/etcd/ssl/ca.pem
        - -subnet-file=/run/flannel/flannel2.env
        - -etcd-prefix=/flannel2/network
        resources:
          requests:
            cpu: "100m"
            memory: "50Mi"
          limits:
            cpu: "100m"
            memory: "50Mi"
        securityContext:
          privileged: true
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:
        - name: run
          mountPath: /run
        - name: flannel2-cfg
          mountPath: /etc/kube-flannel/
        - name: certs
          mountPath: /etc/kubernetes
      volumes:
        - name: run
          hostPath:
            path: /run
        - name: cni
          hostPath:
            path: /etc/cni/multus/net.d
        - name: flannel2-cfg
          configMap:
            name: kube-flannel2-cfg
        - name: certs
          hostPath:
            path: /etc/kubernetes
            type: Directory
---
apiVersion: "kubernetes.cni.cncf.io/v1"
kind: Network
metadata:
  name: flannel-2
